---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import ArrowCard from "@components/ArrowCard.astro";
import { SITE } from "@consts";

export async function getStaticPaths() {
  const blog = (await getCollection("blog")).filter((post) => !post.data.draft);
  const reviews = (await getCollection("reviews")).filter(
    (review) => !review.data.draft,
  );

  const allEntries = [...blog, ...reviews];

  const uniqueCategories = [
    ...new Set([
      ...blog.map((post) => post.data.tags || []).flat(),
      ...reviews.map((review) => review.data.categories).flat(),
    ]),
  ];

  return uniqueCategories.map((category) => {
    return {
      params: { category: category },
      props: {
        entries: allEntries.filter(
          (entry) =>
            (entry.collection === "blog" && entry.data.tags?.includes(category)) ||
            (entry.collection === "reviews" && entry.data.categories.includes(category)),
        ),
        category: category,
      },
    };
  });
}

const { category, entries } = Astro.props;
---

<Layout title={SITE.TITLE} description={SITE.DESCRIPTION}>
  <Container>
    <div class="space-y-10">
      <div class="animate font-semibold text-black dark:text-white">
        Category: {category}
      </div>
      <ul class="animate not-prose flex flex-col gap-4">
        {
          entries.map((entry) => (
            <li>
              <ArrowCard entry={entry} />
            </li>
          ))
        }
      </ul>
    </div>
  </Container>
</Layout>